import concurrent.futures
from flask import Flask, jsonify, request
import asyncio

app = Flask(__name__)

# Define your background task function
async def email_latest_breaks_background(rule_id):
    try:
        # Your background task code here
        # This function runs asynchronously in a thread
        # ...
        pass
    except Exception as e:
        # Handle exceptions as needed
        pass

# Create a ThreadPoolExecutor with a limited number of threads
executor = concurrent.futures.ThreadPoolExecutor(max_workers=2)

# Your route definition
@app.route('/your_endpoint', methods=['POST'])
def your_endpoint():
    rule_id = int(request.json.get('rule_id'))

    # Start the background task asynchronously
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    
    with concurrent.futures.ThreadPoolExecutor(max_workers=2) as executor:
        loop.run_until_complete(executor.submit(email_latest_breaks_background, rule_id))
    
    return jsonify({"message": "Background task started."}), 202

if __name__ == '__main__':
    app.run(debug=True)
