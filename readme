from datetime import datetime

def get_hierarchy_level_based_on_expiry(contract_expiry_date_str):
    # Convert the contract expiry date string to a date object
    contract_expiry_date = datetime.strptime(contract_expiry_date_str, '%Y-%m-%d').date()
    
    # Calculate the number of weeks left until the contract expiry date
    today = datetime.today().date()
    days_remaining = (contract_expiry_date - today).days
    weeks_remaining = days_remaining // 7
    
    # Calculate the hierarchy level based on the weeks remaining
    level = max(0, weeks_remaining - 4)
    
    return level

def get_emails_up_to_level(sid, level):
    if level < 0:
        return []
    
    employee = Employee.query.filter_by(SID=sid).first()
    if not employee:
        return []
    
    emails = [employee.EMAIL]
    
    # If the employee has a manager and we haven't reached the desired level, get the manager's email
    if employee.manager and level > 0:
        emails.extend(get_emails_up_to_level(employee.MANAGERSID, level-1))
    
    return emails

def get_emails_based_on_expiry(sid, contract_expiry_date_str):
    hierarchy_level = get_hierarchy_level_based_on_expiry(contract_expiry_date_str)
    return get_emails_up_to_level(sid, hierarchy_level)

# Assuming you have initialized your Flask app and SQLAlchemy, let's test this:
# sid = 'your_given_SID'
# contract_expiry_date_str = '2023-12-31'
# emails_list = get_emails_based_on_expiry(sid, contract_expiry_date_str)
# emails_list

# Note: The above test lines are commented out because we cannot execute them here. 
# Make sure to replace 'your_given_SID' and use the function in your Flask environment.

